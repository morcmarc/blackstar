{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"jump",
				"jumpTimer"
			],
			[
				"vc",
				"vcrOsd"
			],
			[
				"Game",
				"Gamestate"
			],
			[
				"add",
				"addButtonPair"
			],
			[
				"sp",
				"sprites"
			],
			[
				"pla",
				"playerDidMove"
			],
			[
				"beh",
				"behaviour"
			],
			[
				"ligh",
				"lightMouse"
			],
			[
				"main",
				"main_color Let (main.rs) : let (window, mut device, mut factory, main_color, _main_depth) ="
			],
			[
				"mai",
				"main_color Let (main.rs) : let (window, mut device, mut factory, main_color, _main_depth) ="
			],
			[
				"ver",
				"vertex_buffer"
			],
			[
				"Fac",
				"FactoryExt Trait (factory.rs) : pub trait FactoryExt<R: device::Resources>: device::Factory<R> {"
			],
			[
				"tra",
				"traits Module (lib.rs) : /Users/marcell/.cargo/registry/src/github.com-0a35038f75765ae4/gfx-0.6.4/src/lib.rs       "
			],
			[
				"exter",
				"extern-crate	extern crate …;"
			],
			[
				"swa",
				"swaggerSpec"
			],
			[
				"N",
				"NumberType	token.Token ν"
			],
			[
				"make",
				"makeBasicLit	*ast.BasicLit ƒ"
			],
			[
				"eval",
				"EvalExpr	ast.Expr ƒ"
			],
			[
				"Ba",
				"BadExpr	struct ʈ"
			],
			[
				"Exp",
				"Expr	interface ¡"
			],
			[
				"makeFun",
				"makeFuncCall	*ast.CallExpr ƒ"
			],
			[
				"Node",
				"NodeIdent	 Ɩ"
			],
			[
				"IMpo",
				"ImportSpec	struct ʈ"
			],
			[
				"Ex",
				"ExprStmt	struct ʈ"
			],
			[
				"Func",
				"FuncDecl	struct ʈ"
			],
			[
				"L",
				"List	[]ast.Stmt ν"
			],
			[
				"Fun",
				"FuncType	struct ʈ"
			],
			[
				"No",
				"NodeCall	 Ɩ"
			],
			[
				"im",
				"import	import (...) ʂ"
			],
			[
				"Code",
				"CodegenState"
			],
			[
				"par",
				"parseTopLevel"
			],
			[
				"Par",
				"ParseError"
			],
			[
				"res",
				"reservedOp"
			],
			[
				"var",
				"variable"
			],
			[
				"buil",
				"build-dev"
			],
			[
				"dep-",
				"dep-install"
			],
			[
				"find",
				"findBreweryRequest"
			],
			[
				"Brew",
				"Brewery"
			],
			[
				"Tabl",
				"TableHeader"
			],
			[
				"Table",
				"TableRow"
			],
			[
				"br",
				"beerList"
			],
			[
				"map",
				"mapDispatchToProps"
			],
			[
				"fetchBer",
				"fecthBeersFailure"
			],
			[
				"fetch",
				"FETCH_BEERS_FAILURE"
			],
			[
				"fe",
				"fetchBeersSuccess"
			],
			[
				"beer",
				"beerList"
			],
			[
				"sche",
				"schemaBuilder"
			],
			[
				"back",
				"background-color"
			],
			[
				"sub",
				"Subheader"
			],
			[
				"backg",
				"background-color"
			],
			[
				"class",
				"className"
			],
			[
				"a",
				"aws_iam_user"
			],
			[
				"Bee",
				"BeerStore"
			],
			[
				"qs",
				"qsa	querySelectorAll"
			],
			[
				"sea",
				"searchUri"
			],
			[
				"Beer",
				"BeerAdvocateService"
			],
			[
				"cl",
				"cl	console.log"
			],
			[
				"expor",
				"export:variable	ES6 Module Export Variable"
			],
			[
				"re-",
				"re-find"
			],
			[
				"fr",
				"frequencies"
			],
			[
				"has",
				"hash-map"
			],
			[
				"nucleo",
				"nucleotides"
			],
			[
				"defn",
				"defn"
			],
			[
				"but",
				"buttonPlus"
			],
			[
				"butt",
				"buttonTimes"
			],
			[
				"M",
				"MESSAGE_BAR_REF"
			],
			[
				"lo",
				"location"
			],
			[
				"_on",
				"_onUpdateUserLocation"
			],
			[
				"Scne",
				"ScenerServer"
			],
			[
				"mes",
				"messageId"
			],
			[
				"handle",
				"handleRemoveMessage"
			],
			[
				"coor",
				"coordinates"
			],
			[
				"loca",
				"locationState"
			],
			[
				"Map",
				"MapView	MapView"
			],
			[
				"pro",
				"profileImageWrapper"
			],
			[
				"profi",
				"profileImageUri"
			],
			[
				"fi",
				"firstname"
			],
			[
				"R",
				"DRAWER_REF"
			],
			[
				"FIR",
				"FIRSTNAME_REF"
			],
			[
				"user",
				"userState"
			],
			[
				"PRO",
				"PROFILE_IMG_REF"
			],
			[
				"tex",
				"Text"
			],
			[
				"sty",
				"style"
			],
			[
				"Scrol",
				"ScrollableTabView"
			],
			[
				"padding",
				"padding-bottom"
			],
			[
				"dra",
				"drawerRef"
			],
			[
				"Ma",
				"Mapbox"
			],
			[
				"Compo",
				"ComposedScene"
			],
			[
				"get",
				"getState"
			],
			[
				"component",
				"componentWillMount"
			],
			[
				"stye",
				"styles"
			],
			[
				"Menu",
				"MenuButton"
			],
			[
				"handleLogin",
				"handleLoginFound"
			],
			[
				"Log",
				"LoginActions"
			],
			[
				"co",
				"console"
			],
			[
				"Login",
				"LoginStore"
			],
			[
				"rea",
				"react-native-facebook-login"
			],
			[
				"style",
				"styles"
			],
			[
				"handleLo",
				"handleLogout"
			],
			[
				"Lo",
				"LoginActions"
			],
			[
				"Re",
				"ReactIntl"
			],
			[
				"Sign",
				"SignInForm"
			],
			[
				"rende",
				"renderImages"
			],
			[
				"Pr",
				"Println	n int, err error ƒ"
			],
			[
				"PR",
				"Println	n int, err error ƒ"
			],
			[
				"Spr",
				"Sprintf	string ƒ"
			],
			[
				"Glo",
				"GlobalString	string ƒ"
			],
			[
				"Gl",
				"GlobalString	string ƒ"
			],
			[
				"File",
				"OpenFile	file *os.File, err error ƒ"
			],
			[
				"Co",
				"Context	struct ʈ"
			],
			[
				"Comm",
				"Commands	[]cli.Command ν"
			],
			[
				"fun",
				"func main	func main {...} ʂ"
			],
			[
				"aws",
				"aws_elasticache_parameter_group"
			],
			[
				"conf",
				"config_file"
			],
			[
				"vid",
				"videos"
			],
			[
				"val",
				"val_coords"
			],
			[
				"save",
				"save_version"
			],
			[
				"c",
				"cv_mock"
			],
			[
				"get_va",
				"get_var_from_title"
			],
			[
				"ge",
				"get_excel_coordinates"
			],
			[
				"cloudtr",
				"cloudtrail	 package ρ"
			],
			[
				"crea",
				"create_versions"
			],
			[
				"creat",
				"create_versions"
			],
			[
				"cm-excel",
				"cm-excel-revisions"
			],
			[
				"cm",
				"cmexcel_role"
			],
			[
				"de",
				"description"
			],
			[
				"l_",
				"l_v"
			],
			[
				"download",
				"download_url"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/player.lua",
			"settings":
			{
				"buffer_size": 4933,
				"line_ending": "Unix"
			}
		},
		{
			"file": "main.lua",
			"settings":
			{
				"buffer_size": 1646,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 267.0,
		"last_filter": "packinst",
		"selected_items":
		[
			[
				"packinst",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Upgrade Package"
			],
			[
				"packinsta",
				"Package Control: Install Package"
			],
			[
				"stylis",
				"SublimeHaskell: Stylish"
			],
			[
				"hask",
				"SublimeHaskell: Run"
			],
			[
				"haske",
				"SublimeHaskell: Stylish"
			],
			[
				"syntax go",
				"Set Syntax: Go"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"package ins",
				"Package Control: Install Package"
			],
			[
				"p",
				"Package Control: Install Package"
			],
			[
				"babel",
				"Set Syntax: JavaScript (Babel)"
			],
			[
				"pytho",
				"Set Syntax: Python"
			],
			[
				"cform",
				"Set Syntax: CloudFormation"
			],
			[
				"jav",
				"Set Syntax: JavaScript"
			],
			[
				"ruby",
				"Set Syntax: Ruby"
			],
			[
				"removepac",
				"Package Control: Remove Package"
			],
			[
				"markd",
				"Set Syntax: Markdown"
			],
			[
				"removpa",
				"Package Control: Remove Package"
			],
			[
				"rub",
				"Set Syntax: Ruby"
			],
			[
				"packinstal",
				"Package Control: Install Package"
			],
			[
				"ru",
				"Set Syntax: Ruby"
			],
			[
				"dockerf",
				"Set Syntax: Dockerfile"
			],
			[
				"syntgo",
				"Set Syntax: Go"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"pacins",
				"Package Control: Install Package"
			],
			[
				"pains",
				"Package Control: Install Package"
			],
			[
				"inslp",
				"Package Control: Install Package"
			],
			[
				"packins",
				"Package Control: List Packages"
			],
			[
				"pack",
				"Package Control: Upgrade Package"
			]
		],
		"width": 601.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/marcell/Code/github.com/blackstar"
	],
	"file_history":
	[
		"/Users/marcell/Library/Application Support/Sublime Text 3/Packages/User/LuaLove.sublime-settings",
		"/Users/marcell/Library/Application Support/Sublime Text 3/Packages/Lua Love/LuaLove.sublime-settings",
		"/Users/marcell/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/marcell/Code/github.com/blackstar/main.lua",
		"/Users/marcell/Code/github.com/blackstar/src/game.lua",
		"/Users/marcell/Code/github.com/blackstar/src/level.lua",
		"/Users/marcell/Code/github.com/blackstar/src/camera.lua",
		"/Users/marcell/Code/github.com/blackstar/src/player.lua",
		"/Users/marcell/Code/github.com/blackstar/.gitignore",
		"/Users/marcell/Code/github.com/blackstar/src/mainmenu.lua",
		"/Users/marcell/Code/github.com/blackstar/src/menucontrols.lua",
		"/Users/marcell/Code/github.com/blackstar/src/gamecontrols.lua",
		"/Users/marcell/Code/github.com/blackstar/vendor/hump/docs/signal.rst",
		"/Users/marcell/Code/github.com/blackstar/vendor/hump/docs/class.rst",
		"/Users/marcell/Code/github.com/blackstar/README.md"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 106.0,
		"where_history":
		[
			"/Users/marcell/Code/go/src/github.com/jcla1/gisp/generator",
			"/Users/marcell/Code/react/Scener/node_modules/react-native-i18n",
			"/Users/marcell/Code/react/Scener/node_modules/react-native-i18n-complete",
			"/Users/marcell/Code/bitbucket.org/aws-excel-service/core",
			"/Users/marcell/Code/go/src/github.com/Flashtalking/disch",
			"/Users/marcell/Code/go/src/github.com/Flashtalking/disch/disch",
			"/Users/marcell/Code/go/src/github.com/Flashtalking/disch",
			"/Users/marcell/Code/go/src/github.com/Flashtalking/disch/disch",
			"/Users/marcell/Code/go/src/github.com/Flashtalking/disch",
			"/Users/marcell/Code/bitbucket.org/jx-reports/src/server/charts",
			"/Users/marcell/Code/go/src/github.com/Flashtalking/hadar",
			"/Users/marcell/Code/go/src/github.com/flashtalking/goask/examples",
			"/Users/marcell/Code/go/src/github.com/flashtalking/goask",
			"/Users/marcell/Code/go/src/github.com/morcmarc/goask",
			"/Users/marcell/Code/bitbucket.org/jx-reports/src/client"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Controls",
			"MainMenu",
			"{{",
			"tactile",
			"post_effect",
			"player.",
			"sH",
			"sW",
			"player.sprite",
			"behaviour",
			"'",
			"draw",
			"applyLinearImpulse",
			"*",
			"my_service",
			"makeIdomaticSelector",
			"CamelCase",
			"get",
			"Get",
			"ADD",
			"checkFuncArgs",
			"makeFunDeclFromFuncLit",
			"makeExprStmt",
			"mainable",
			"Order",
			"myservice",
			"+",
			"m2m",
			"M2M",
			"m2m",
			"rtb-dccb6fb8",
			"reporting.tar.gz",
			"reporting-build",
			"results",
			"fecthBeersFailure",
			"fetchBeersSuccess",
			"FETCH_BEERS",
			":=",
			"</p>",
			"<p>",
			"FIND_BREWERY_FAILED",
			"REQUEST",
			"Main",
			"]",
			"[",
			"Main",
			"routes/",
			"containers",
			"FETCH_BEER_LIST",
			"browserHistory",
			"onClick",
			"LeftNav",
			"PORT",
			"redux",
			"let ",
			"router.use(baseUri + '/beers', Beers());",
			"data",
			"    ",
			"- [ ]",
			"handleUserLocationUpdate",
			"handleGetProfile",
			"UserStore",
			"UserActions",
			"mapRef",
			"precomp",
			"## ",
			"Privacy Policy",
			"privacy policy",
			"Privacy Policy",
			"privacy policy",
			"Privacy Policy",
			"waze",
			"Waze",
			"waze",
			"Waze",
			"WAZE",
			"Waze",
			"WAZE",
			"Waze",
			"waze",
			"Waze",
			"waze",
			"Waze",
			"Bottom",
			"AuthenticatedComponent",
			"\"",
			"appcompat",
			"23.",
			"TouchableOpacity",
			"= ",
			"EXPORT",
			"657464860012",
			"qa-capi.flashtalking.net",
			" =",
			"variable \"",
			"**",
			"docker-compose.yml",
			"us-west-1",
			"us-east-1",
			"east",
			"us-east-1",
			"{$var.suffix}",
			"aws_",
			"= ''",
			"!= ''",
			"get_xml",
			"cfconn",
			"git",
			"download_url",
			"_extend_message_timeout",
			"_delete_message",
			"_extend_message_timeout",
			"_delete_message",
			"S3_BUCKET",
			"config.",
			"importer.preprocess",
			"CAPI_BASE_URL",
			"get_",
			"io",
			"sys",
			"importer.run",
			"req.",
			"'tests/data/correct.xlsx'",
			"get_highest_column()",
			".value",
			"constants",
			"DATA_OFFSET",
			"HEADER_OFFSET"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"github.com",
			"",
			"github.com/Flashtalking/disch/disch/models",
			"github.com/Flashtalking/disch/disch/datastore",
			"github.com/Flashtalking/disch/disch/config",
			"// Copyright (c) 2015, Flashtalking, Ltd.\n// All rights reserved.\n//\n// This source code is licensed under the BSD-style license found in the\n// LICENSE file in the root directory of this source tree.",
			"",
			"\"github.com/Flashtalking/",
			"github.com/Flashtalking/goask",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/player.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4933,
						"regions":
						{
						},
						"selection":
						[
							[
								635,
								635
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Lua Love/LuaLove.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "main.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1646,
						"regions":
						{
						},
						"selection":
						[
							[
								1642,
								1642
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Lua Love/LuaLove.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.9o:///Users/marcell/Code/react/Scener/app/login":
	{
		"height": 116.0
	},
	"output.GoSublime-main-output":
	{
		"height": 110.0
	},
	"output.GsDoc-output-output":
	{
		"height": 110.0
	},
	"output.elm_type":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.haskell_error_panel":
	{
		"height": 250.0
	},
	"output.haskell_sublime_load":
	{
		"height": 116.0
	},
	"output.unsaved_changes":
	{
		"height": 110.0
	},
	"pinned_build_system": "",
	"project": "blackstar.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"datehe",
				"jx-reports/src/server/common/DateHelpers.js"
			],
			[
				"collec",
				"jx-reports/src/server/scheduler_new/collector.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 276.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
